name: Cross-platform Build and Release

on:
  push:
    tags:
      - 'v*'    # 触发条件：当推送标签（如 v1.0.0）时运行
  workflow_dispatch: # 手动触发

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.10]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          pyinstaller main.py --onefile --noconsole --name CloudreveDownloader.exe
        else
          pyinstaller main.py --onefile --name CloudreveDownloader
      shell: bash

    - name: Archive artifacts
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          zip CloudreveDownloader-windows.zip dist/CloudreveDownloader.exe
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          zip CloudreveDownloader-macos.zip dist/CloudreveDownloader
        else
          tar -czvf CloudreveDownloader-ubuntu.tar.gz dist/CloudreveDownloader

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name CloudreveDownloader-${{ matrix.os }}
        path |
          CloudreveDownloader-*.zip
          CloudreveDownloader-*.tar.gz

    - name: Create GitHub Release
      if: ${{ matrix.os == 'ubuntu-latest' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          CloudreveDownloader-windows.zip
          CloudreveDownloader-macos.zip
          CloudreveDownloader-ubuntu.tar.gz
        asset_name: CloudreveDownloader-${{ matrix.os }}.zip
        asset_content_type: application/zip
